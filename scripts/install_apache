#! /bin/bash

. ./lib

http="../common/apache"
http_tar=$(latest_tar $http httpd-)
[ $? = 1 ] && ml_echo "$http_tar" && exit 1
http_v="${http_tar%.tar.*}"
http_dir="/usr/local/$http_v"

#x###########################
#x remove httpd's rpm
#x###########################
if [[ "$kernelv" = *Ubuntu* ]]; then
	cd .
else
	s=`rpm -q httpd | grep "not installed"`;
	if [ -z "$s" ]; then
		ml_echo "rpm httpd is existing"
		s=`ps aux|grep httpd`
		httpd_is_running=0
		oldIFS=$IFS
		IFS=$'\r\n'
		for row in $s; do
			if [[ "$row" = */usr/sbin/httpd* ]];then
				httpd_is_running=1
				break
			fi
		done
		IFS=$oldIFS
		if [ $httpd_is_running = 1 ]; then
			ml_echo "rpm httpd is running, stop it first"
			service httpd stop
		fi
		ml_echo "removing rpm httpd..."
		yum -y remove httpd > /dev/null
		ml_echo "rpm httpd is removed"
	fi
fi

# make sure $droot is existing
mkdir -p $droot

# install httpd
if [ -d $http_dir ]; then
	ml_echo "$http_dir is existing"
else
	ml_echo "start installing httpd..."
	############## install start
	if [ -d "$tmp_dir/$http_v" ];then
		ml_echo "$tmp_dir/$http_v is existing"
	else
		cd $tmp_dir
		ml_echo "extracting $http_tar"
		tar xf $http/$http_tar
	fi
	
	# check and install zlib
	check_deps gcc
	check_deps "zlib-devel"
	
	cd $tmp_dir/$http_v
	ml_echo "./configure --prefix=$http_dir --enable-so --enable-dav --enable-rewrite"
	./configure --prefix=$http_dir --enable-so --enable-dav --enable-rewrite > $dlogs.httpd.configure
	ml_echo "make $http_v"
	make > $dlogs.httpd.make
	ml_echo "make install $http_v"
	make install > $dlogs.httpd.make_install 2>&1
	
	cp $http_dir/bin/apachectl /etc/init.d/httpd
	############## install end
fi


# add dav conf
gitroot=/var/www/git
s=`cat $http_dir/conf/httpd.conf|grep DavLockDB`
if [ -z "$s" ]; then
	cat $dconf/httpd-dav.conf >> $http_dir/conf/httpd.conf
	ml_echo "creating $gitroot"
	mkdir -p $gitroot
	ml_echo "$($http_dir/bin/htpasswd -bc $gitroot/user.passwd admin Admin)"
fi
chown -R daemon:daemon $gitroot
chmod -R 0764 $gitroot


s=`ps aux|grep httpd`
httpd_is_running=0
oldIFS=$IFS
IFS=$'\r\n'
for row in $s; do
	if [[ "$row" = *httpd\ -k* ]];then
		httpd_is_running=1
		break
	fi
done
IFS=$oldIFS
if [ $httpd_is_running = 1 ];then
	ml_echo 'httpd service is running'
	s=$(service httpd stop | grep "no pid file")
	if [ -n "$s" ]; then
		ml_echo "$s"
		s=$(ps aux | grep "httpd")
		local oldIFS=$IFS
		IFS=$'\r\n'
		for row in $s; do
			if [[ "$row" = *httpd\ -k\ start* ]]; then
				s2="$(echo "$row" | grep -o "^\w\{1,\} \{1,\}\w\{1,\}")"
				s2=${s2##* }
				kill $s2
				echo "$s2 is killed"
			fi
		done
		IFS=$oldIFS
	fi
	sleep 1
	service httpd start
else
	ml_echo 'starting httpd service'
	service httpd start
fi

# start on boot
s=`cat /etc/rc.local | grep httpd`
if [ -z "$s" ];then
	echo "service httpd start" >> /etc/rc.local
	ml_echo "service httpd is installed in rc.local"
else
	ml_echo "service httpd is existing in rc.local"
fi

